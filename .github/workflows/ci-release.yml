name: CI Release Images

on:
  workflow_call:
    inputs:
      repository:
        description: 'Name of the repo to download files from'
        type: string
      run-id:
        description: 'Id of the run to download files from'
        type: string
      name:
        description: 'Artifact name to download'
        type: string
  workflow_dispatch:
     inputs:
       repository:
         description: 'Name of the repo to download files from'
         type: string
       run-id:
         description: 'Id of the run to download files from'
         type: string
       name:
         description: 'Artifact name to download'
         type: string

jobs:
   image:
      runs-on: ubuntu-latest
      steps:
         - name: Checkout
           uses: actions/checkout@v4
           with:
               repository: 'rigazilla/infinispan-images'
         - name: Download a Build Artifact
           uses: actions/download-artifact@v4.1.7
           with:
             repository: '${{ inputs.repository }}'
             run-id: '${{ inputs.run-id }}'
             name:  '${{ inputs.name }}'
             github-token: ${{ secrets.GITHUB_TOKEN }}

         - name: Install CEKit
           uses: cekit/actions-setup-cekit@v1.1.5

         - name: Create Dockerfile
           env:
             SERVER_ZIP: ${{ inputs.name }}.zip
           run: |
               pwd
               ls
               SERVER_OVERRIDE="{\"artifacts\":[{\"name\":\"server\",\"path\":\"${GITHUB_WORKSPACE}/${SERVER_ZIP}\"}]}"
               cekit -v --descriptor server-openjdk.yaml build --overrides '{'version': '${{ github.sha }}'}' --overrides ${SERVER_OVERRIDE} --dry-run docker

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v3

         - name: Login to Quay
           uses: docker/login-action@v3
           with:
             registry: quay.io
             username: rigazilla+ghimages
             password: ${{ secrets.QUAY_IO_PASSWORD }}

         - name: Build
           uses: docker/build-push-action@v3
           with:
             context: ./target/image
             platforms: linux/amd64
             pull: true
             push: true
             file: target/image/Dockerfile
             tags: quay.io/rigazilla/infinispan-server:test-${{ github.run_id }},localhost:5001/server:${{ github.sha }}

         - name: Tag Image
           run: |
               docker save localhost:5001/server:${{ github.sha }} > /tmp/operand-image.tar

         - name: Upload
           uses: actions/upload-artifact@v4
           with:
               name: operand-image
               path: /tmp/operand-image.tar

         - name: Push to Quay.io
           uses: opspresso/action-docker@master
           with:
               args: --docker
           env:
               USERNAME: rigazilla+ghimages
               PASSWORD: ${{ secrets.QUAY_IO_PASSWORD }}
               REGISTRY: "quay.io/rigazilla"
               TAG_NAME: test-${{ github.run_id }}
               IMAGE_NAME: infinispan-server
